#include <iostream>
using namespace std;
struct node
{
    char data;
    struct node *next;
}*top=NULL;
void push(char x)
{
    struct node *p;
    p=new node;
    p->data=x;
    p->next=top;
    top=p;
    //cout<<top->data<<" ";
}
int pop(char x)
{
    struct node *temp;
    if(top==NULL)
    return 0;
    else if(x==')' && top->data=='(')
    {
        temp=top;
        top=top->next;
        delete temp;
        return 1;
    }
     else if(x=='}' && top->data=='{')
     {
        temp=top;
        top=top->next;
        delete temp;
        return 1; 
     }
     else if(x==']' && top->data=='[')
     {
        temp=top;
        top=top->next;
        delete temp;
        return 1; 
     }
    else
    return 0;
}
int isbalanced(string str)
{
    int i=0;
    for(i=0;str[i]!='\0';i++)
    {
        if(str[i]=='(' || str[i]=='{' ||str[i]=='[')
        push(str[i]);
        else if(str[i]==')' ||str[i]=='}' || str[i]==']')
        {
            if(top==NULL)
            return 0;
            else 
            pop(str[i]);
        }
    }
    if(top==NULL)
    return 1;
    else 
    return 0;
    
}
int main()
{
    string str="[()]{}{[()()]()}";
    cout<<isbalanced(str);
	return 0;
}
